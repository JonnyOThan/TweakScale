// ----- PREFIX: try to determine the default radius of the part

// anything with size1p5 in bulkheadProfiles gets tweakscale_node_size = 1.5, since this can't be detected with attachNodes
@PART:HAS[~tweakscale_ignore&~tweakscale_node_size&#bulkheadProfiles[*size1p5*]]:FOR[TweakScale]
{
	tweakscale_node_size = 1.5
}

// otherwise anything with a node_stack_top or node_stack_bottom gets its size set
@PART:HAS[~tweakscale_ignore&~tweakscale_node_size&#node_stack_top]:FOR[TweakScale]
{
	tweakscale_node_size = #$node_stack_top[6]$
}

@PART:HAS[~tweakscale_ignore&~tweakscale_node_size&#node_stack_bottom]:FOR[TweakScale]
{
	tweakscale_node_size = #$node_stack_bottom[6]$
}

// ----- ENGINES

// SRBs
@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]]]:FOR[TweakScale]
{
	#@TWEAKSCALEBEHAVIOR[SRB]/MODULE[TweakScale] { }
}

// other engines
@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleEngines*]]:FOR[TweakScale]
{
	#@TWEAKSCALEBEHAVIOR[Engine]/MODULE[TweakScale] { }
}

// ---- WINGS

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleLiftingSurface]&!RESOURCES]:FOR[TweakScale]
{
	%MODULE[TweakScale]
	{
		type = free_square
	}
}

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleLiftingSurface]&@RESOURCES]:FOR[TweakScale]
{
	%MODULE[TweakScale]
	{
		type = free
	}
}

// ---- CONTROL SURFACES

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleControlSurface]]:FOR[TweakScale]
{
	%MODULE[TweakScale]
	{
		type = free_square
	}
}

// ---- ANTENNAS

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleDataTransmitter]:HAS[~antennaType[INTERNAL]]]:FOR[TweakScale]
{
	%MODULE[TweakScale]
	{
		type = free_square
	}
}

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleDeployableAntenna]]:FOR[TweakScale]
{
	%MODULE[TweakScale]
	{
		type = free_square
	}
}

// ----- SOLAR PANELS

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleDeployableSolarPanel]]:FOR[TweakScale]
{
	%MODULE[TweakScale]
	{
		type = free_square
	}
}

// ----- WHEELS

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleWheelBase]]:FOR[TweakScale]
{
	%MODULE[TweakScale]
	{
		type = free
	}
}

// ----- DECOUPLERS

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleDecouple]]:FOR[TweakScale]
{
	#@TWEAKSCALEBEHAVIOR[Decoupler]/MODULE[TweakScale] { }
}

@PART:HAS[~tweakscale_ignore&!MODULE[TweakScale]&@MODULE[ModuleAnchoredDecoupler]]:FOR[TweakScale]
{
	#@TWEAKSCALEBEHAVIOR[Decoupler]/MODULE[TweakScale] { }
}

// ----- MECHANISMS below here

// strip whitespace from tweakscale_node_size
@PART:HAS[#tweakscale_node_size]:FOR[TweakScale]
{
	@tweakscale_node_size ^= :\s+::
}

// convert node size to default scale

@PART:HAS[~tweakscale_default_scale&#tweakscale_node_size[0]]:FOR[TweakScale]
{
	tweakscale_default_scale = 0.625
}

@PART:HAS[~tweakscale_default_scale&#tweakscale_node_size[1]]:FOR[TweakScale]
{
	tweakscale_default_scale = 1.25
}

@PART:HAS[~tweakscale_default_scale&#tweakscale_node_size[1.5]]:FOR[TweakScale]
{
	tweakscale_default_scale = 1.875
}

@PART:HAS[~tweakscale_default_scale&#tweakscale_node_size[2]]:FOR[TweakScale]
{
	tweakscale_default_scale = 2.5
}

@PART:HAS[~tweakscale_default_scale&#tweakscale_node_size[3]]:FOR[TweakScale]
{
	tweakscale_default_scale = 3.75
}

@PART:HAS[~tweakscale_default_scale&#tweakscale_node_size[4]]:FOR[TweakScale]
{
	tweakscale_default_scale = 5
}

// create the tweakscale node for anything that has a tweakscale_default_scale and doesn't already have a module
// note this DOESN'T set the scale type
@PART:HAS[~tweakscale_ignore&#tweakscale_default_scale&!MODULE[TweakScale]]:FOR[TweakScale]
{
	MODULE
	{
		name = TweakScale
		%defaultScale = #$/tweakscale_default_scale$
	}
}

// set the scale type to stack for anything with with tweakscale_node_size and doesn't already have the type set
@PART:HAS[~tweakscale_ignored&#tweakscale_node_size&@MODULE[TweakScale]:HAS[~type]]:FOR[TweakScale]
{
	@MODULE[TweakScale]
	{
		type = stack
	}
}

// otherwise set the scale type to free if it's missing
@PART:HAS[~tweakscale_ignored&@MODULE[TweakScale]:HAS[~type]]:FOR[TweakScale]
{
	@MODULE[TweakScale]
	{
		type = free
	}
}

// set the default scale for anything that might be missing it
@PART:HAS[~tweakscale_ignore&#tweakscale_default_scale&@MODULE[TweakScale]:HAS[~defaultScale]]:FOR[TweakScale]
{
	@MODULE[TweakScale]
	{
		%defaultScale = #$/tweakscale_default_scale$
	}
}

// cleanup
@PART:LAST[TweakScale]:NEEDS[disabled]
{
	-tweakscale_ignore = 
	-tweakscale_default_scale = 
	-tweakscale_node_size = 
}
